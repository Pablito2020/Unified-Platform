#+TITLE: Unified Platform Project ðŸ“”
#+AUTHOR: Pablo Fraile Alonso, Roger Fontova Torres and Oscar Salcedo Heredia

[[https://github.com/Pablito2020/Unified-Platform/actions/workflows/maven.yml][https://github.com/Pablito2020/Unified-Platform/actions/workflows/maven.yml/badge.svg]]
[[https://github.com/Pablito2020/Unified-Platform/actions/workflows/javaformat.yml][https://github.com/Pablito2020/Unified-Platform/actions/workflows/javaformat.yml/badge.svg]]


* Execute Tests ðŸ§ª
You can run the tests with IntelliJ, Maven or Eclipse.

** IntelliJ:
Go to the src/test/java package, right click on it and select the "execute tests" option.

** Eclipse:
Go to the root of the project, right click on it and select: "run as" and then "junit test".

** Maven:
Make sure that you have the Java Home Path exported. The JDK version should be 17 (in our case, we are using the OpenJDK one).
In case you have to configure it on linux you can do:

#+BEGIN_SRC sh
    $ export JAVA_HOME=/usr/lib/jvm/java-17-openjdk/
#+END_SRC

After that, go to the root of the project and execute:
#+BEGIN_SRC sh
    $ mvn test
#+END_SRC


* Contributing ðŸ’¬
Before contributing, see the [[https://github.com/Pablito2020/Unified-Platform/issues][issues]] page for knowing which changes/improvements can be made to the project. After you've choosen the problem you want to fix, you have to assign yourself to the issue. After that, create a new branch with your name (for example: pablo), and commit your changes to it.
When you have finished your work, you can nominate all the project members inside the issue and then, if everything goes fine, you will merge your branch with develop.
If you want to see if some issue has already been talked inside the repository, you can go to the [[https://github.com/Pablito2020/Unified-Platform/issues?q=is%3Aissue+is%3Aclosed][clossed issues]] tab.


* Knowing issues ðŸ›‘
For know, the only "issue" we have is that github actions can't execute the PDFDocumentTest class. This is because github actions runs on a server that doesn't have a display server like [[https://wiki.archlinux.org/title/Xorg][Xorg]] installed, which is necessary for openning a pdf file.

For fixing this, we've created another maven configuration file just for github actions. This file ignores the PDFDocumentTest class and tests all the other classes. This is a hack that we would like to fix, but we hadn't have more time.
